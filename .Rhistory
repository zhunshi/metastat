)
View(ob.lst)
colnames(pr) <- gsub("\\.txt","",colnames(pr))
pr <- as.data.frame(t(pr))
pr <- pr[,rownames(ob.lst)]
knitr::opts_chunk$set(echo = TRUE)
# phenotypes
phe <- read.table(
"../../../../../3.Results/01.phe/GOCY/phe.GOCY.txt",
row.names = 1,header = T,check.names = F
)
# species
pr <- read.table(
"../../../../../3.Results/02.Taxa/metaphlan2/GOCY/n200.species.profile",
row.names = 1,header = T,check.names = F
)
# Obeisty-related species
ob.lst <- read.csv(
"../../../../99.Figures/v1/Figure2/Obesity-related.species.csv",
row.names = 1,header = T,stringsAsFactors = F
)
colSums(pr)
View(pr)
setwd("D:/Projects/pg_vst_microbiome/1.Assay/02.taxa/metaphlan2/GOCY")
# filter and normalize species in GOCY
# species
pr <- read.table(
"../../../../../3.Results/02.Taxa/metaphlan2/GOCY/n200.species.profile",
row.names = 1,header = T,check.names = F
)
setwd("D:/Projects/pg_vst_microbiome/1.Assay/02.taxa/metaphlan2/GOCY")
# filter and normalize species in GOCY
# species
pr <- read.table(
"../../../../3.Results/02.Taxa/metaphlan2/GOCY/n200.species.profile",
row.names = 1,header = T,check.names = F
)
# species list in metaphlan2 database
lst <- read.table(
"../../../../3.Results/02.Taxa/metaphlan2/mpa_v20_m200.pkl.results.txt",
header = F,stringsAsFactors = F
)
View(lst)
# library
library(tidyverse)
lst$V1[1]
## species list process
lst2 <- lst %>%
separate(V1,unlist(strsplit("kpcofgst")),sep = "\\|")
## species list process
lst2 <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|")
View(lst2)
lst2[6903,]
lst[6903,]
## species list process
lst2 <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|") %>%
filter(k %in% c("k__Bacteria","k__Archaea"))
lst2 <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|") %>%
na.omit()
## species list process
lst2 <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|") %>%
na.omit() %>%
filter(k %in% c("k__Bacteria","k__Archaea"))
## species list process
lst <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|") %>%
na.omit() %>%
filter(k %in% c("k__Bacteria","k__Archaea"))
lst.meta <- lst$s[!duplicated(lst$s)]
View(lst)
# filter profile
pr <- pr[rownames(pr) %in% lst$s,]
library(tidyverse)
# species
pr <- read.table(
"../../../../3.Results/02.Taxa/metaphlan2/GOCY/n200.species.profile",
row.names = 1,header = T,check.names = F
)
# species list in metaphlan2 database
lst <- read.table(
"../../../../3.Results/02.Taxa/metaphlan2/mpa_v20_m200.pkl.results.txt",
header = F,stringsAsFactors = F
)
## species list process
lst <- lst %>%
separate(V1,unlist(strsplit("kpcofgst","")),sep = "\\|") %>%
na.omit() %>%
filter(k %in% c("k__Bacteria","k__Archaea"))
lst.meta <- lst$s[!duplicated(lst$s)]
lst.meta <- gsub("s__","",lst.meta)
# filter profile
pr <- pr[rownames(pr) %in% lst$s,]
# species
pr <- read.table(
"../../../../3.Results/02.Taxa/metaphlan2/GOCY/n200.species.profile",
row.names = 1,header = T,check.names = F
)
# filter profile
pr <- pr[rownames(pr) %in% lst.meta,]
View(pr)
sum(grep("unclassified",rownames(pr)))
knitr::opts_chunk$set(echo = TRUE)
lst.sp <- read.csv("../../../99.Figures/v1/Figure2/Obesity-related.species.csv",row.names = 1,header = T,stringsAsFactors = F)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(dplyr)
library(tibble)
library(pheatmap)
library(RColorBrewer)
# directory for input
indir <- "../../../../3.Results/"
# phenotypes
phe <- read.csv(
paste0(indir,"01.phe/PG.n1320.phenotypes.2.csv")
,header = T,check.names = F,stringsAsFactors = F)
phe.diet <- read.csv(
paste0(indir,"05.comparison/01.phe/diet_PCA/PCAs.centering.results.csv"),
row.names = 1,header = T
)
# species profile
pr_s <- read.table(
paste0(indir,"02.Taxa/metaphlan2/PG.n1320.metaphlan2.species.clean.update.3.txt"),
row.names = 1,header = T,check.names = F,sep = "\t")
lst.sp <- read.csv("../../../99.Figures/v1/Figure2/Obesity-related.species.csv",row.names = 1,header = T,stringsAsFactors = F)
colnames(phe)[1] <- "PGID"
phe2 <- phe %>%
left_join(
phe.diet %>% rownames_to_column(var="PGID") %>% dplyr::select(c("PGID",paste0("PC",1:5))),
by = "PGID"
) %>%
dplyr::select(
PGID,
BMI = bmi,
WC,
L23_VAT = L23_Visceral_fat_area,
L23_SAT = L23_Subcutaneous_fat_area,
L45_VAT = L45_Visceral_fat_area,
L45_SAT = L45_Subcutaneous_fat_area,
L23_V_S_ratio = L23_Visceral_fat_area/L23_Subcutaneous_fat_area,
L23_V_ratio = L23_Visceral_fat_area/L23_Total_fat_area,
L45_V_S_ratio = L45_Visceral_fat_area/L45_Subcutaneous_fat_area,
L45_V_ratio = L45_Visceral_fat_area/L45_Total_fat_area,
Sex = sex, Age = age,
FPG,PPG,Fins,Pins,HbA1c,HOMA.IR,CH,HDL,LDL,TG,L_S_ratio,DBP,SBP,
) %>%
column_to_rownames(var="PGID")
colnames(pr_s) <- gsub("s__","",colnames(pr_s))
scc_between <- function(dat1,dat2){
inte <- intersect(rownames(dat1),rownames(dat2))
dat1 <- dat1[inte,,drop=F]
dat2 <- dat2[inte,,drop=F]
out <- as.data.frame(matrix(NA,ncol(dat1),ncol(dat2)*3))
rownames(out) <- colnames(dat1)
colnames(out) <- paste(rep(colnames(dat2),rep(3,ncol(dat2))),rep(c("rho","pvalue","FDR"),ncol(dat2)))
for(i in 1:ncol(dat2)){
x <- as.numeric(dat2[,i])
for(j in 1:ncol(dat1)){
y <- as.numeric(dat1[,j])
res <- cor.test(x,y,method = "spearman")
out[j,i*3-2] <- res$estimate
out[j,i*3-1] <- res$p.value
}
out[,i*3] <- p.adjust(out[,i*3-1],method = "BH")
}
return(out)
}
phe.t <- phe2
phe.m <- phe2[phe2$Sex==1,colnames(phe2)!="Sex"]
phe.f <- phe2[phe2$Sex==2,colnames(phe2)!="Sex"]
scc.t <- scc_between(pr_s,phe.t)
scc.m <- scc_between(pr_s,phe.m)
scc.f <- scc_between(pr_s,phe.f)
heatmap <- function(scc){
n <- ncol(scc)/3
id <- (1:n)*3
scc.c <- scc[,id-2,drop=F]
scc.f <- scc[,id,drop=F]
colnames(scc.c) <- colnames(scc.f) <- gsub(" rho","",colnames(scc.c))
#scc.num <- apply(scc.f, 2, function(x) ifelse(x<0.05,"*",""))
scc.num <- round(scc.c,2)
scc.num[scc.f>=0.1] <- ""
paletteLength <- 50
#myColor <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(paletteLength)
myColor <- colorRampPalette(colors = c("#7B68EE","white","firebrick3"))(paletteLength)
mybreak <- c(seq(min(scc.c), 0, length.out=ceiling(paletteLength/2) + 1),
seq(max(scc.c)/paletteLength, max(scc.c), length.out=floor(paletteLength/2)))
pheatmap((scc.c),display_numbers = (scc.num),
cluster_rows = F,cluster_cols = F,
cellheight = 20,cellwidth = 40,
treeheight_col = 0,treeheight_row = 0,
fontsize = 15,fontsize_number = 15,
#gaps_row = c(n/3,n/3*2),
color = myColor,
breaks = mybreak)
}
lst.sp <- rownames(lst.sp)#[lst.sp$Group=="L23_VAT"]
scc.t <- scc.t[lst.sp,]
scc.m <- scc.m[lst.sp,]
scc.f <- scc.f[lst.sp,]
heatmap(scc.t)
heatmap(scc.m)
heatmap(scc.f)
DataExtract <- function(dat){
n <- ncol(dat)/3
id <- (1:n)*3
dat.c <- dat[,id-2]
dat.f <- dat[,id]
colnames(dat.c) <- colnames(dat.f) <- gsub(" rho","",colnames(dat.c))
dat.c <- dat.c[,c("BMI","WC","L23_VAT","L45_VAT","L23_SAT","L45_SAT","TG","DBP","SBP","PPG","Pins")]
dat.f <- dat.f[,colnames(dat.c)]
dat.n <- apply(dat.f,2,function(x) ifelse(x<0.05,"*",ifelse(x<0.1,"#","")))
return(list(c=dat.c,n=dat.n))
}
dat.t <- DataExtract(scc.t)
dat.m <- DataExtract(scc.m)
dat.f <- DataExtract(scc.f)
a <- apply(dat.f$n,1,function(x) any(x!=""))
b <- apply(dat.m$n,1,function(x) any(x!=""))
id <- a & b
dat.c <- cbind(dat.f$c,dat.m$c)
dat.n <- cbind(dat.f$n,dat.m$n)
dat.c <- dat.c[id,]
dat.c <- dat.c[order(dat.c[,3]),]
dat.n <- dat.n[rownames(dat.c),]
heatmap2 <- function(scc.c,scc.n){
scc.c <- scc.c
scc.num <- scc.n
paletteLength <- 50
myColor <- colorRampPalette(colors = c("blue","white","firebrick3"))(paletteLength)
v <- max(abs(range(scc.c)))
mybreak <- c(seq(-v, 0, length.out=ceiling(paletteLength/2) + 1),
seq(v/paletteLength, v, length.out=floor(paletteLength/2)))
pheatmap((scc.c),display_numbers = (scc.num),
cluster_rows = F,cluster_cols = F,
cellheight = 20,cellwidth = 20,
treeheight_col = 0,treeheight_row = 0,
fontsize = 15,fontsize_number = 20,
gaps_col = c(11,11),
color = myColor,
breaks = mybreak)
}
heatmap2(dat.c,dat.n)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(dplyr)
library(tibble)
library(pheatmap)
library(RColorBrewer)
# directory for input
indir <- "../../../../3.Results/"
# phenotypes
phe <- read.csv(
paste0(indir,"01.phe/PG.n1320.phenotypes.2.csv")
,header = T,check.names = F,stringsAsFactors = F)
phe.diet <- read.csv(
paste0(indir,"05.comparison/01.phe/diet_PCA/PCAs.centering.results.csv"),
row.names = 1,header = T
)
# species profile
pr_s <- read.table(
paste0(indir,"02.Taxa/metaphlan2/PG.n1320.metaphlan2.species.clean.update.3.txt"),
row.names = 1,header = T,check.names = F,sep = "\t")
lst.sp <- read.csv("../../../99.Figures/v1/Figure2/Obesity-related.species.csv",row.names = 1,header = T,stringsAsFactors = F)
colnames(phe)[1] <- "PGID"
phe2 <- phe %>%
left_join(
phe.diet %>% rownames_to_column(var="PGID") %>% dplyr::select(c("PGID",paste0("PC",1:5))),
by = "PGID"
) %>%
dplyr::select(
PGID,
BMI = bmi,
WC,
L23_VAT = L23_Visceral_fat_area,
L23_SAT = L23_Subcutaneous_fat_area,
L45_VAT = L45_Visceral_fat_area,
L45_SAT = L45_Subcutaneous_fat_area,
L23_V_S_ratio = L23_Visceral_fat_area/L23_Subcutaneous_fat_area,
L23_V_ratio = L23_Visceral_fat_area/L23_Total_fat_area,
L45_V_S_ratio = L45_Visceral_fat_area/L45_Subcutaneous_fat_area,
L45_V_ratio = L45_Visceral_fat_area/L45_Total_fat_area,
Sex = sex, Age = age,
FPG,PPG,Fins,Pins,HbA1c,HOMA.IR,CH,HDL,LDL,TG,L_S_ratio,DBP,SBP,
) %>%
column_to_rownames(var="PGID")
colnames(pr_s) <- gsub("s__","",colnames(pr_s))
scc_between <- function(dat1,dat2){
inte <- intersect(rownames(dat1),rownames(dat2))
dat1 <- dat1[inte,,drop=F]
dat2 <- dat2[inte,,drop=F]
out <- as.data.frame(matrix(NA,ncol(dat1),ncol(dat2)*3))
rownames(out) <- colnames(dat1)
colnames(out) <- paste(rep(colnames(dat2),rep(3,ncol(dat2))),rep(c("rho","pvalue","FDR"),ncol(dat2)))
for(i in 1:ncol(dat2)){
x <- as.numeric(dat2[,i])
for(j in 1:ncol(dat1)){
y <- as.numeric(dat1[,j])
res <- cor.test(x,y,method = "spearman")
out[j,i*3-2] <- res$estimate
out[j,i*3-1] <- res$p.value
}
out[,i*3] <- p.adjust(out[,i*3-1],method = "BH")
}
return(out)
}
phe.t <- phe2
phe.m <- phe2[phe2$Sex==1,colnames(phe2)!="Sex"]
phe.f <- phe2[phe2$Sex==2,colnames(phe2)!="Sex"]
View(pr_s)
pr_s <- pr_s[,rownames(lst.sp)]
scc.t <- scc_between(pr_s,phe.t)
scc.m <- scc_between(pr_s,phe.m)
scc.f <- scc_between(pr_s,phe.f)
heatmap <- function(scc){
n <- ncol(scc)/3
id <- (1:n)*3
scc.c <- scc[,id-2,drop=F]
scc.f <- scc[,id,drop=F]
colnames(scc.c) <- colnames(scc.f) <- gsub(" rho","",colnames(scc.c))
#scc.num <- apply(scc.f, 2, function(x) ifelse(x<0.05,"*",""))
scc.num <- round(scc.c,2)
scc.num[scc.f>=0.1] <- ""
paletteLength <- 50
#myColor <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(paletteLength)
myColor <- colorRampPalette(colors = c("#7B68EE","white","firebrick3"))(paletteLength)
mybreak <- c(seq(min(scc.c), 0, length.out=ceiling(paletteLength/2) + 1),
seq(max(scc.c)/paletteLength, max(scc.c), length.out=floor(paletteLength/2)))
pheatmap((scc.c),display_numbers = (scc.num),
cluster_rows = F,cluster_cols = F,
cellheight = 20,cellwidth = 40,
treeheight_col = 0,treeheight_row = 0,
fontsize = 15,fontsize_number = 15,
#gaps_row = c(n/3,n/3*2),
color = myColor,
breaks = mybreak)
}
lst.sp <- rownames(lst.sp)#[lst.sp$Group=="L23_VAT"]
scc.t <- scc.t[lst.sp,]
scc.m <- scc.m[lst.sp,]
scc.f <- scc.f[lst.sp,]
heatmap(scc.t)
heatmap(scc.m)
heatmap(scc.m)
heatmap(scc.f)
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
library(dplyr)
library(tibble)
library(pheatmap)
library(RColorBrewer)
library(ppcor)
# directory for input
indir <- "../../../../3.Results/"
# phenotypes
phe <- read.csv(
paste0(indir,"01.phe/PG.n1320.phenotypes.2.csv")
,header = T,check.names = F,stringsAsFactors = F)
phe.diet <- read.csv(
paste0(indir,"05.comparison/01.phe/diet_PCA/PCAs.centering.results.csv"),
row.names = 1,header = T
)
# species profile
pr_s <- read.table(
paste0(indir,"02.Taxa/metaphlan2/PG.n1320.metaphlan2.species.clean.update.3.txt"),
row.names = 1,header = T,check.names = F,sep = "\t")
lst.sp <- read.csv(
"../../../99.Figures/v1/Figure2/Obesity-related.species.csv",
row.names = 1,header = T,stringsAsFactors = F)
colnames(phe)[1] <- "PGID"
phe2 <- phe %>%
left_join(
phe.diet %>% rownames_to_column(var="PGID") %>% dplyr::select(c("PGID",paste0("PC",1:5))),
by = "PGID"
) %>%
dplyr::select(
PGID,
BMI = bmi,
WC,
L23_VAT = L23_Visceral_fat_area,
L23_SAT = L23_Subcutaneous_fat_area,
L45_VAT = L45_Visceral_fat_area,
L45_SAT = L45_Subcutaneous_fat_area,
L23_V_S_ratio = L23_Visceral_fat_area/L23_Subcutaneous_fat_area,
L23_V_ratio = L23_Visceral_fat_area/L23_Total_fat_area,
L45_V_S_ratio = L45_Visceral_fat_area/L45_Subcutaneous_fat_area,
L45_V_ratio = L45_Visceral_fat_area/L45_Total_fat_area,
Sex = sex, Age = age,
FPG,PPG,Fins,Pins,HbA1c,HOMA.IR,CH,HDL,LDL,TG,L_S_ratio,DBP,SBP,
) %>%
column_to_rownames(var="PGID")
colnames(pr_s) <- gsub("s__","",colnames(pr_s))
pr_s <- pr_s[,rownames(lst.sp)]
pcc_between <- function(dat1,dat2,dat_adj){
inte <- intersect(rownames(dat1),rownames(dat2))
dat1 <- dat1[inte,,drop=F]
dat2 <- dat2[inte,,drop=F]
dat_adj <- dat_adj[inte,,drop=F]
out <- as.data.frame(matrix(NA,ncol(dat1),ncol(dat2)*3))
rownames(out) <- colnames(dat1)
colnames(out) <- paste(rep(colnames(dat2),rep(3,ncol(dat2))),rep(c("rho","pvalue","FDR"),ncol(dat2)))
for(i in 1:ncol(dat2)){
#print(colnames(dat2)[i])
x <- dat2[,i,drop=F]
for(j in 1:ncol(dat1)){
y <- dat1[,j,drop=F]
a <- cbind(x,y,dat_adj)
a <- na.omit(a)
res <- pcor.test(a[,1,drop=F],a[,2,drop=F],dat_adj[rownames(a),,drop=F],method = "spearman")
out[j,i*3-2] <- res$estimate
out[j,i*3-1] <- res$p.value
}
out[,i*3] <- p.adjust(out[,i*3-1],method = "BH")
}
return(out)
}
phe.t <- phe2[,!colnames(phe2)%in%c("Sex","Age")]
phe.m <- phe2[phe2$Sex==1,!colnames(phe2)%in%c("Sex","Age")]
phe.f <- phe2[phe2$Sex==2,!colnames(phe2)%in%c("Sex","Age")]
phe.adj <- phe %>%
dplyr::select(c("PGID","age","Time_Sit_day","Time_Sleep_grp")) %>%
column_to_rownames(var="PGID")
phe.adj <- cbind(phe.adj,phe.diet[rownames(phe.adj),1:5])
#phe.adj <- phe.adj[,"age",drop=F]
pcc.t <- pcc_between(pr_s,phe.t,phe.adj)
pcc.m <- pcc_between(pr_s,phe.m,phe.adj)
pcc.f <- pcc_between(pr_s,phe.f,phe.adj)
View(phe.adj)
heatmap <- function(pcc){
n <- ncol(pcc)/3
id <- (1:n)*3
pcc.c <- pcc[,id-2,drop=F]
pcc.f <- pcc[,id,drop=F]
colnames(pcc.c) <- colnames(pcc.f) <- gsub(" rho","",colnames(pcc.c))
#pcc.num <- apply(pcc.f, 2, function(x) ifelse(x<0.05,"*",""))
pcc.num <- round(pcc.c,2)
pcc.num[pcc.f>=0.1] <- ""
paletteLength <- 50
#myColor <- colorRampPalette(rev(brewer.pal(n = 7, name ="RdYlBu")))(paletteLength)
myColor <- colorRampPalette(colors = c("#7B68EE","white","firebrick3"))(paletteLength)
mybreak <- c(seq(min(pcc.c), 0, length.out=ceiling(paletteLength/2) + 1),
seq(max(pcc.c)/paletteLength, max(pcc.c), length.out=floor(paletteLength/2)))
pheatmap((pcc.c),display_numbers = (pcc.num),
cluster_rows = F,cluster_cols = F,
cellheight = 20,cellwidth = 40,
treeheight_col = 0,treeheight_row = 0,
fontsize = 15,fontsize_number = 15,
#gaps_row = c(n/3,n/3*2),
color = myColor,
breaks = mybreak)
}
lst.sp <- rownames(lst.sp)
pcc.t <- pcc.t[lst.sp,]
pcc.m <- pcc.m[lst.sp,]
pcc.f <- pcc.f[lst.sp,]
heatmap(pcc.t)
heatmap(pcc.m)
heatmap(pcc.f)
DataExtract <- function(dat){
n <- ncol(dat)/3
id <- (1:n)*3
dat.c <- dat[,id-2]
dat.f <- dat[,id]
colnames(dat.c) <- colnames(dat.f) <- gsub(" rho","",colnames(dat.c))
dat.c <- dat.c[,c("BMI","WC","L23_VAT","L45_VAT","L23_SAT","L45_SAT","TG","DBP","SBP","PPG","Pins")]
dat.f <- dat.f[,colnames(dat.c)]
dat.n <- apply(dat.f,2,function(x) ifelse(x<0.05,"*",ifelse(x<0.1,"#","")))
return(list(c=dat.c,n=dat.n))
}
dat.t <- DataExtract(pcc.t)
dat.m <- DataExtract(pcc.m)
dat.f <- DataExtract(pcc.f)
a <- apply(dat.f$n,1,function(x) any(x!=""))
b <- apply(dat.m$n,1,function(x) any(x!=""))
id <- a & b
dat.c <- cbind(dat.f$c,dat.m$c)
dat.n <- cbind(dat.f$n,dat.m$n)
dat.c <- dat.c[id,]
dat.c <- dat.c[order(dat.c[,3]),]
dat.n <- dat.n[rownames(dat.c),]
heatmap2 <- function(pcc.c,pcc.n){
pcc.c <- pcc.c
pcc.num <- pcc.n
paletteLength <- 50
myColor <- colorRampPalette(colors = c("blue","white","firebrick3"))(paletteLength)
v <- max(abs(range(pcc.c)))
mybreak <- c(seq(-v, 0, length.out=ceiling(paletteLength/2) + 1),
seq(v/paletteLength, v, length.out=floor(paletteLength/2)))
pheatmap((pcc.c),display_numbers = (pcc.num),
cluster_rows = F,cluster_cols = F,
cellheight = 20,cellwidth = 20,
treeheight_col = 0,treeheight_row = 0,
fontsize = 15,fontsize_number = 20,
gaps_col = c(11,11),
color = myColor,
breaks = mybreak)
}
heatmap2(dat.c,dat.n)
heatmap2(dat.c,dat.n)
View(phe.adj)
all(phe$sex==rownames(phe.adj))
setwd("D:/Projects/metastat/R")
devtools::document()
install.packages("roxygen2")
devtools::create("metastat")
setwd("D:/Projects/metastat")
devtools::create("metastat")
devtools::document()
devtools::document()
